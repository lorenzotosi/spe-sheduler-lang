/*
 * generated by Xtext 2.32.0
 */
package it.unibo.spe.mdd.sheduler.tests;

import com.google.inject.Inject;
import it.unibo.spe.mdd.sheduler.sheduler.TaskPool;
import org.eclipse.xtext.testing.InjectWith;
import org.eclipse.xtext.testing.extensions.InjectionExtension;
import org.eclipse.xtext.testing.util.ParseHelper;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.InputStreamReader;

@ExtendWith(InjectionExtension.class)
@InjectWith(ShedulerInjectorProvider.class)
class ShedulerParsingTest {
	@Inject
	private ParseHelper<TaskPool> parseHelper;

	private String loadResourceAsStringByName(String name) {
		try (BufferedReader reader = new BufferedReader(new InputStreamReader(getClass().getResourceAsStream(name)))) {
			return reader.lines().reduce("", (a, b) -> a + b + "\n");
		} catch (Exception e) {
			throw new IllegalArgumentException("Cannot load resource " + name, e);
		}
	}
	
	@Test
	void loadModel() throws Exception {
		var text = loadResourceAsStringByName("HelloWorld.shed");
		var result = parseHelper.parse(text);
		Assertions.assertNotNull(result);
		var errors = result.eResource().getErrors();
		Assertions.assertTrue(errors.isEmpty(), "Unexpected errors: " + errors);
	}
}
