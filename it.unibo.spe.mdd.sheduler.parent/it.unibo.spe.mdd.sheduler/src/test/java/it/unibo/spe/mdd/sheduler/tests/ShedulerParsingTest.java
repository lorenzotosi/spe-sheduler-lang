/*
 * generated by Xtext 2.32.0
 */
package it.unibo.spe.mdd.sheduler.tests;

import com.google.inject.Inject;
import it.unibo.spe.mdd.sheduler.TimeUtils;
import it.unibo.spe.mdd.sheduler.sheduler.Task;
import it.unibo.spe.mdd.sheduler.sheduler.TaskPool;
import it.unibo.spe.mdd.sheduler.sheduler.TimeUnit;
import org.eclipse.xtext.testing.InjectWith;
import org.eclipse.xtext.testing.extensions.InjectionExtension;
import org.eclipse.xtext.testing.util.ParseHelper;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;

import java.time.Duration;

import static org.junit.jupiter.api.Assertions.*;

@ExtendWith(InjectionExtension.class)
@InjectWith(ShedulerInjectorProvider.class)
class ShedulerParsingTest extends AbstractTest {
	@Inject
	private ParseHelper<TaskPool> parseHelper;
	
	@Test
	void loadModel() throws Exception {
		String text = loadResourceAsStringByName("HelloWorld.shed");
		TaskPool result = parseHelper.parse(text);
		Assertions.assertNotNull(result);
		var errors = result.eResource().getErrors();
		assertTrue(errors.isEmpty(), "Unexpected errors: " + errors);
		assertEquals(1, result.getTasks().size());
		Task task = result.getTasks().get(0);
		assertEquals("greetWorldFrequently", task.getName());
		assertEquals("echo hello", task.getCommand());
		assertEquals("/bin/sh -c", task.getEntrypoint());
		assertNull(task.getAbsolute());
		assertNotNull(task.getRelative());
		assertEquals(1, task.getRelative().getTimeSpans().size());
		var timeSpan = task.getRelative().getTimeSpans().get(0);
		assertEquals(Duration.ofMinutes(5), TimeUtils.toDuration(timeSpan));
		assertEquals(TimeUnit.MINUTES, timeSpan.getUnit());
		var period = task.getPeriod();
		assertNotNull(period);
		assertEquals(1, period.getTimeSpans().size());
		timeSpan = period.getTimeSpans().get(0);
		assertEquals(Duration.ofHours(1), TimeUtils.toDuration(timeSpan));
	}
}
